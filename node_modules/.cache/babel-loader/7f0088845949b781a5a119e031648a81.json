{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/amulya/Dropbox/todo-react/src/App.js\",\n    _class3,\n    _temp2;\n\nimport React from 'react';\nimport './App.css';\nimport { observer, inject } from 'mobx-react';\nimport DevTools from 'mobx-react-devtools';\nlet App = (_dec = inject('TodoStore'), _dec(_class = observer(_class = (_temp = class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.task.value);\n      this.props.TodoStore.addTodo(this.task.value);\n      this.task.value = '';\n    };\n  }\n\n  render() {\n    const store = this.props.TodoStore;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(DevTools, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Todo List\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, store.getTodoCount, \" pending todos\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Double Click on task to rename\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add new todo\",\n      ref: inp => this.task = inp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add todo\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, store.todos.map((todo, key) => React.createElement(TodoView, {\n      key: key,\n      todo: todo,\n      keyla: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp)) || _class) || _class);\n\nlet TodoView = observer(_class3 = (_temp2 = class TodoView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onToggle = () => {\n      console.log(\"Check clicked\");\n      this.props.todo.done = !this.props.todo.done;\n    };\n\n    this.onRename = () => {\n      this.props.todo.task = prompt('Task name', this.props.todo.task);\n    };\n  }\n\n  render() {\n    const todo = this.props.todo;\n    const key = this.props.keyla;\n    return React.createElement(\"li\", {\n      key: key,\n      onDoubleClick: this.onRename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: todo.done,\n      onChange: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), todo.task, \" -> \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, todo.done ? \"finished\" : \"pending\"));\n  }\n\n}, _temp2)) || _class3;\n\nexport default App;","map":{"version":3,"sources":["/home/amulya/Dropbox/todo-react/src/App.js"],"names":["React","observer","inject","DevTools","App","Component","handleSubmit","e","preventDefault","console","log","task","value","props","TodoStore","addTodo","render","store","getTodoCount","inp","todos","map","todo","key","TodoView","onToggle","done","onRename","prompt","keyla"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,EAAiBC,MAAjB,QAA8B,YAA9B;AACA,OAAOC,QAAP,MAAqB,qBAArB;IAIMC,G,WAFLF,MAAM,CAAC,WAAD,C,gBACND,Q,mBADD,MAEMG,GAFN,SAEkBJ,KAAK,CAACK,SAFxB,CAEkC;AAAA;AAAA;;AAAA,SAEhCC,YAFgC,GAEhBC,CAAD,IAAK;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUC,KAAtB;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBC,OAArB,CAA6B,KAAKJ,IAAL,CAAUC,KAAvC;AACA,WAAKD,IAAL,CAAUC,KAAV,GAAgB,EAAhB;AACD,KAP+B;AAAA;;AAShCI,EAAAA,MAAM,GAAE;AACN,UAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWC,SAAzB;AACF,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,KAAK,CAACC,YAAX,mBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,EAKE;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,cAA/B;AAA8C,MAAA,GAAG,EAAEa,GAAG,IAAI,KAAKR,IAAL,GAAUQ,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAMC,GAAN,KAAa,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,IAAI,EAAED,IAA1B;AAAgC,MAAA,KAAK,EAAEC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAFJ,CATF,CADF;AAiBD;;AA5BiC,C;;IAgC5BC,Q,GADLvB,Q,qBAAD,MACMuB,QADN,SACuBxB,KAAK,CAACK,SAD7B,CACsC;AAAA;AAAA;;AAAA,SAEpCoB,QAFoC,GAEzB,MAAM;AACfhB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WAAKG,KAAL,CAAWS,IAAX,CAAgBI,IAAhB,GAAqB,CAAC,KAAKb,KAAL,CAAWS,IAAX,CAAgBI,IAAtC;AACD,KALmC;;AAAA,SAOpCC,QAPoC,GAO1B,MAAM;AACd,WAAKd,KAAL,CAAWS,IAAX,CAAgBX,IAAhB,GAAqBiB,MAAM,CAAC,WAAD,EAAc,KAAKf,KAAL,CAAWS,IAAX,CAAgBX,IAA9B,CAA3B;AACD,KATmC;AAAA;;AAUpCK,EAAAA,MAAM,GAAE;AACN,UAAMM,IAAI,GAAG,KAAKT,KAAL,CAAWS,IAAxB;AACA,UAAMC,GAAG,GAAG,KAAKV,KAAL,CAAWgB,KAAvB;AACA,WACE;AAAI,MAAA,GAAG,EAAEN,GAAT;AAAc,MAAA,aAAa,EAAG,KAAKI,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEL,IAAI,CAACI,IAArC;AAA2C,MAAA,QAAQ,EAAE,KAAKD,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAELH,IAAI,CAACX,IAFA,UAES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQW,IAAI,CAACI,IAAL,GAAY,UAAZ,GAAwB,SAAhC,CAFT,CADF;AAMD;;AAnBmC,C;;AAsBtC,eAAetB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {observer,inject} from 'mobx-react'\nimport DevTools from 'mobx-react-devtools';\n\n@inject('TodoStore')\n@observer\nclass App extends React.Component {\n\n  handleSubmit = (e)=>{\n    e.preventDefault();\n    console.log(this.task.value);\n    this.props.TodoStore.addTodo(this.task.value);\n    this.task.value='';\n  }\n\n  render(){\n    const store = this.props.TodoStore;\n  return (\n    <div className=\"App\">\n      <DevTools />\n      <h1>Todo List</h1>\n      <h2>{store.getTodoCount} pending todos</h2>\n      <h5>Double Click on task to rename</h5>\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" placeholder=\"add new todo\" ref={inp => this.task=inp}/>\n        <button>Add todo</button>\n      </form>\n      <ul>\n        {\n          store.todos.map((todo,key)=>(<TodoView key={key} todo={todo} keyla={key}/>))\n        }\n      </ul>\n    </div>\n  );\n}\n}\n\n@observer\nclass TodoView extends React.Component{\n\n  onToggle = () => {\n    console.log(\"Check clicked\");\n    this.props.todo.done=!this.props.todo.done;\n  }\n\n  onRename= () => {\n    this.props.todo.task=prompt('Task name', this.props.todo.task);\n  }\n  render(){\n    const todo = this.props.todo;\n    const key = this.props.keyla;\n    return(\n      <li key={key} onDoubleClick={ this.onRename }>\n        <input type='checkbox' checked={todo.done} onChange={this.onToggle}/>\n{todo.task} -> <small>{todo.done ? \"finished\" :\"pending\"}</small>\n      </li>\n    )\n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}